library(devtools)
library(bedr)

maf<-read.delim("~/Downloads/summarized.filt (1).maf",stringsAsFactors = F)

multi<-readRDS("~/Downloads/multipleannot.filt.txt.RDS")

data_sf<-maf[,c("Chromosome","Start_Position","End_Position","Hugo_Symbol","ID","Variant_Classification")]

data_sf$chr<-as.character(data_sf$Chromosome)
data_sf$start<-as.numeric(data_sf$Start_Position)
data_sf$end<-as.numeric(data_sf$End_Position)
data_sf$end<-data_sf$start+1
data_sf<-data_sf[,c("chr","start","end","Hugo_Symbol","ID","Variant_Classification")]

is.valid.region(data_sf)

cytoBand<-read.delim("~/Downloads/hg38_mdust.bed",sep="\t",stringsAsFactors = F,header = F)
colnames(cytoBand)[1:3]<-c("chr","start","end")
cytoBand<-cytoBand[which(cytoBand$chr %in% paste0("chr",c("1", "2", "3", "4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","X","Y"))),]
is.valid.region(cytoBand)
data_sf<-bedr.sort.region(data_sf)
cytoBand<-bedr.sort.region(cytoBand)
check.binary("bedtools")

#get overlap to mdust files
test_bed<-bedr(engine = "bedtools",input = list(a = data_sf, b = cytoBand), method = "intersect",params ="-loj -sorted ")
overlap_mdust<-test_bed[-grep("-1",test_bed$start.b),]

#get AF from gnomad 2.0.1 for all the filtered variants from gnomad 2.1
library(MafDb.gnomAD.r2.0.1.GRCh38)
mafdb<-MafDb.gnomAD.r2.0.1.GRCh38
gr<-gscores(mafdb,unique(maf$ID))
gnomad_df<-data.frame(seqnames=seqnames(gr), pos=ranges(gr),AF=gr$X)
gnomad_df<-as.matrix(gnomad_df)
gnomad_df<-gnomad_df[as.numeric(gnomad_df[,6])>0.001,]
gnomad_df<-as.data.frame(gnomad_df)

library(MafDb.1Kgenomes.phase1.GRCh38)
mafdb<-MafDb.1Kgenomes.phase1.GRCh38
gr<-gscores(mafdb,unique(maf$ID))
X1000_df<-data.frame(seqnames=seqnames(gr), pos=ranges(gr),AF=gr$X)
X1000_df<-as.matrix(X1000_df)
X1000_df<-X1000_df[as.numeric(X1000_df[,6])>0.001,]
X1000_df<-as.data.frame(X1000_df)



maf<-maf[-which(maf$ID %in% as.character(gnomad_df$pos.names) | maf$ID %in% overlap_mdust$ID | maf$ID %in% as.character(X1000_df$pos.names)),]

maf<-as.data.frame(maf[grep("transcript",maf$ANN.0..FEATURE),])

maf<-read.maf(maf,vc_nonSyn =c("missense_variant", "structural_interaction_variant", "frameshift_variant", "splice_acceptor_variant", "splice_donor_variant", "stop_lost", "conservative_inframe_deletion", "disruptive_inframe_deletion", "conservative_inframe_insertion","disruptive_inframe_insertion", "stop_gained", "stop_lost", "protein_protein_contact", "splice_region_variant", "sequence_feature", "intron_variant", "5_prime_UTR_variant", "Multi_Hit")
 )
colores <- c("#35978f","#f46d43","#56B4E9","#F0E442","#191970","#545454","#CAE1FF", "#CAE1FF", "#FFE4E1", "#FFE4E1","#CC79A7","#56B4E9","#7B68EE","#f46d43","#0072B2","#313695","#abd9e9", "#000000")
names(colores) <- c("missense_variant", "structural_interaction_variant", "frameshift_variant", "splice_acceptor_variant", "splice_donor_variant", "stop_lost", "conservative_inframe_deletion", "disruptive_inframe_deletion", "conservative_inframe_insertion","disruptive_inframe_insertion", "stop_gained", "stop_lost", "protein_protein_contact", "splice_region_variant", "sequence_feature", "intron_variant", "5_prime_UTR_variant", "Multi_Hit")
pdf("~/Downloads/test.pdf",height = 14, width = 20)
oncoplot(maf = maf, top = 100, colors = colores)
dev.off()




